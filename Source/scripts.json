{
	"Core":{

		"dbug":{
			"deps":["dbug"],
			"desc":"Wrapper for the firebug console.log() function."
		}

	},
	"Class.Extras": {

		"Class.Refactor": {
			"deps":["Class"],
			"desc":"Allows for a class to extend itself without damaging it's namespace."
		},

		"Class.Binds": {
			"deps":["Class"],
			"desc":"Adds the Binds Mutator to all classes."
		},

		"Chain.Wait":{
			"deps":["Class.Extras"],
			"desc":"Adds a delay method for chaining that allows you to easily introduce pauses."
		},

		"Class.Occlude": {
			"deps":["Class", "Element"],
			"desc":"Mixin class for preventing a class from applying itself to the same element twice."
		},

		"Class.ToElement": {
			"deps":["Class"],
			"desc":"Mixin class that returns *this.element*. Allows you to do $(myInstance)."
		}

	},
	"Browser":{

		"Browser.Extras": {
			"deps": ["Browser", "String.Extras", "DomReady"],
			"desc": "Extends the Window native class with numerous shortcuts."
		}

	},
	"Native":{

		"Date":{
			"deps": ["Core", "String", "Number", "Hash", "Array"],
			"desc": "Extends the Date native object to include methods useful in managing dates."
		},

		"Date.Extras":{
			"deps": ["Date"],
			"desc": "Extends the Date native object to include extra methods (on top of those in Date.js)."
		},

		"Hash.Extras": {
			"deps": ["Core"],
			"desc": "Extends the Hash native object to include getFromPath which allows a path notation to child elements."
		},

		"String.Extras": {
			"deps": ["String", "Array", "Hash.Extras"],
			"desc": "Extends the String native object to include methods useful in managing strings (query strings, urls, etc)."
		}

	},
	"Element":{

		"Element.Delegation": {
			"deps":["Element.Event"],
			"desc":"Delegates events for child elements to their parents for greater efficiency."
		},

		"Element.Forms": {
			"deps": ["Element"],
			"desc": "Extends the Element native object to include methods useful in managing inputs."
		},

		"Element.Measure": {
			"deps": ["Element.Style"],
			"desc": "Extends the Element native object to include methods useful in measuring dimensions."
		},

		"Element.MouseOvers": {
			"deps": ["Element.Event", "DomReady", "Element.Shortcuts"],
			"desc": "Collection of mouseover behaviours (images, class toggles, etc.)."
		},

		"Element.Pin": {
			"deps": ["Element.Event", "Element.Dimensions", "Element.Style"],
			"desc": "Extends the Element native object to include the pin method useful for fixed positioning for elements."
		},

		"Element.Position": {
			"deps": ["Element.Dimensions", "Element.Measure"],
			"desc": "Extends the Element native object to include methods useful positioning elements relative to others."
		},

		"Element.Shortcuts": {
			"deps": ["Element.Style", "dbug"],
			"desc": "Extends the Element native object to include some shortcut methods."
		}

	},
	"Fx": {

		"Fx.Elements": {
			"deps": ["Fx.CSS"],
			"desc": "Effect to change any number of CSS properties of any number of Elements."
		},

		"Fx.Move": {
			"deps": ["Fx.Morph", "Element.Position"],
			"desc": "Moves an element to another location (relative to another element) with a transition."
		},

		"Fx.Reveal": {
			"deps": ["Fx.Morph", "Element.Shortcuts", "Element.Measure"],
			"desc": "Executes a transition from display:block to display:none and vice versa."
		},

		"Fx.Scroll": {
			"deps": ["Fx", "Element.Event", "Element.Dimensions"],
			"desc": "Effect to smoothly scroll any element, including the window."
		},

		"Fx.Slide": {
			"deps": ["Fx", "Element.Style"],
			"desc": "Effect to slide an element in and out of view."
		},

		"Fx.Sort": {
			"deps": ["Fx.Elements", "Element.Dimensions", "Element.Measure"],
			"desc": "Reorders a group of items with a transition."
		}


	},
	
	"Drag": {
		
		"Drag": {
			"deps": ["Class.Extras", "Element.Event", "Element.Style"],
			"desc": "The base Drag Class. Can be used to drag and resize Elements using mouse events."
		},

		"Drag.Move": {
			"deps": ["Drag", "Element.Dimensions"],
			"desc": "A Drag extension that provides support for the constraining of draggables to containers and droppables."
		}
		
	},

	"Request":{
		"Request.JsonP":{
			"deps":["Browser", "Element", "Request", "dbug", "Class.Extras"],
			"desc":"Creates a Json request using a script tag include and handles the callbacks for you."
		},
		"Request.NoCache": {
			"deps":["Request", "Request.HTML", "Class.Refactor"],
			"desc":"Extends Request and Request.HTML to automatically include a unique noCache value to prevent request caching."
		},
		"Request.Queue": {
			"deps":["Request"],
			"desc":"Manages a group of Request instances so that connections are queued."
		}
	},

	"Utilities": {
		
		"Hash.Cookie": {
			"deps": ["Class.Extras", "Cookie", "JSON"],
			"desc": "Class for creating, reading, and deleting browser Cookies in JSON format."
		},
		
		"Color": {
			"deps": ["Core", "Array", "String", "Function", "Number", "Hash"],
			"desc": "Class for creating and manipulating colors in JavaScript. Supports HSB -> RGB Conversions and vice versa."
		},

		"Group": {
			"deps": ["Class.Extras"],
			"desc": "Class for monitoring collections of events."
		},
		
		"Assets": {
			"deps": ["Element.Event"],
			"desc": "Provides methods to dynamically load JavaScript, CSS, and Image files into the document."
		}

	},
	
	"Interface": {
		
		"Sortables": {
			"deps": ["Drag.Move"],
			"desc": "Class for creating a drag and drop sorting interface for lists of items."
		},
		
		"Tips": {
			"deps": ["Class.Extras", "Element.Event", "Element.Style", "Element.Dimensions"],
			"desc": "Class for creating nice tooltips that follow the mouse cursor when hovering over an element."
		},

		"SmoothScroll": {
			"deps": ["Fx.Scroll"],
			"desc": "Class for creating a smooth scrolling effect to all internal links on the page."
		},

		"Slider": {
			"deps": ["Drag", "Element.Dimensions"],
			"desc": "Class for creating horizontal and vertical slider controls."
		},

		"Scroller": {
			"deps": ["Class.Extras", "Element.Event", "Element.Dimensions"],
			"desc": "Class which scrolls the contents of any Element (including the window) when the mouse reaches the Element's boundaries."
		},
		
		"Accordion": {
			"deps": ["Fx.Elements", "Element.Event"],
			"desc": "An Fx.Elements extension which allows you to easily create accordion type controls."
		}
		
	}

}